================================================================
=== Overlaps
================================================================

T -- ZZZ_TRACK
label/I:prod_type/I:is_findable/I:pt/F:eta/F:phi/F:
nhit_sim/I:nlay_sim/I:nhit_rec/I:nhit_miss_rec/I:novlp/I:novlp_good/I:novlp_bad/I

O -- ZZZ_OVERLAP
label/I:prod_type/I:is_findable/I:layer/I:pt/F:eta/F:phi/F:
chi2/F:chi2_ovlp/F:module/I:module_ovlp/I:hit_label/I:hit_label_ovlp/I

ST -- SSS_TRACK
label/I:prod_type/I:is_findable/I:pt/F:eta/F:phi/F:
nhit_sim/I:nlay_sim/I:novlp/I:novlp_pix/I:novlp_strip/I:novlp_stereo/I

SO -- SSS_OVERLAP
label/I:prod_type/I:is_findable/I:layer/I:pt/F:eta/F:phi/F

./mkFit --cmssw-n2seeds --input-file ../../mu-hs.bin --build-ce --mtv-like-val --quality-val > extra.txt

perl -ne 'if (/^ZZZ_OVERLAP/) { s/^ZZZ_OVERLAP //og; print; }' extra.txt > ovlp.rtt
perl -ne 'if (/^ZZZ_TRACK/)   { s/^ZZZ_TRACK //og; print; }'   extra.txt > track.rtt
perl -ne 'if (/^SSS_OVERLAP/) { s/^SSS_OVERLAP //og; print; }' extra.txt > sim_ovlp.rtt
perl -ne 'if (/^SSS_TRACK/)   { s/^SSS_TRACK //og; print; }'   extra.txt > sim_track.rtt


root.exe <<FNORD

TFile f("extra.root","recreate")

TTree t
t.ReadFile("track.rtt")
t.Write("T")

TTree o
o.ReadFile("ovlp.rtt")
o.Write("O")

TTree st
st.ReadFile("sim_track.rtt")
st.Write("ST")

TTree so
so.ReadFile("sim_ovlp.rtt")
so.Write("SO")

f.Close()
.q
FNORD

TFile f("bkf.root","recreate")

TTree t
t.ReadFile("bkf_ovlp.rtt")
t.Write("B")

f.Close()


----------------------------------------------------------------

Looking at tracks found by Leonardo to become inefficient

http://legianni.web.cern.ch/legianni/plot1000/outvaltree_SKL-SP_CMSSW_TTbar_PU50_CE_SIMVALSEED.txt

** EVENT / MC_LABEL - comments
- overlap -> with overlaps
- devel   -> devel before Giuseppe's PR

** 29 / 25 - no overlap taken, strange, 13, 2 missed, 3 wrong

- overlap - 8 / 11 -> 0.72

SELECTED LABEL: with q=-1 pT=  2.137 eta=  0.626 nHits=11  label=  25
State:
 x:  -2.76298 y:  -1.45892 z:  1.49545
 px: 0.467954 py: -2.63584 pz: 0.982447
valid: 1 errors:
 4.22847e-06 -7.50238e-06  4.20806e-08  1.48569e-06 -1.83239e-06  3.60741e-10
-7.50238e-06   1.3312e-05 -7.51412e-08 -2.64016e-06  3.24348e-06 -6.18801e-10
 4.20806e-08 -7.51412e-08  3.38415e-05   2.1867e-08 -1.39875e-08  5.13983e-06
 1.48569e-06 -2.64016e-06   2.1867e-08  1.12642e-05 -8.99556e-07  1.02915e-09
-1.83239e-06  3.24348e-06 -1.39875e-08 -8.99556e-07  8.72034e-07 -3.78027e-10
 3.60741e-10 -6.18801e-10  5.13983e-06  1.02915e-09 -3.78027e-10  8.71601e-07

Hits:
    hit  0 lyr= 0 idx=2024 pos r=  3.125 z=   1.493   mc_hit=2024 mc_trk=  25
    hit  1 lyr= 1 idx=1522 pos r=  6.955 z=   4.051   mc_hit=5137 mc_trk=  25
    hit  2 lyr= 2 idx=1252 pos r= 10.709 z=   6.556   mc_hit=7342 mc_trk=  25
    hit  3 lyr= 3 idx=1137 pos r= 16.147 z=  10.186   mc_hit=9363 mc_trk=  25
    hit  4 lyr= 4 idx=2419 pos r= 24.020 z=  16.908   mc_hit=22407 mc_trk=  25
    hit  5 lyr= 5 idx=2383 pos r= 24.222 z=  17.026   mc_hit=22380 mc_trk= 127
    hit  6 lyr= 6 idx=2199 pos r= 32.645 z=  23.889   mc_hit=29317 mc_trk=  25
    hit  7 lyr= 7 idx=2171 pos r= 32.928 z=  23.623   mc_hit=29314 mc_trk=  25
    hit  8 lyr= 8 idx=2480 pos r= 43.518 z=  30.145   mc_hit=34024 mc_trk=  25
    hit  9        idx=-1
    hit 10 lyr=10 idx=2439 pos r= 62.768 z=  45.977   mc_hit=51500 mc_trk= 165
    hit 11        idx=-1
    hit 12 lyr=12 idx=2081 pos r= 70.482 z=  45.067   mc_hit=56656 mc_trk=  -1
    hit 13        idx=-1
    hit 14        idx=-2

- devel - 8 / 10 = 0.8

SELECTED LABEL: with q=-1 pT=  2.166 eta=  0.624 nHits=10  label=  25
State:
 x:  -54.1848 y:  -43.1628 z:  45.7655
 px: 0.461784 py: -2.28408 pz: 0.984161
valid: 1 errors:
 6.71053e-05 -8.54644e-05  1.23337e-05  1.48642e-05  1.20708e-05 -4.90016e-09
-8.54644e-05  0.000108851  -1.5676e-05 -1.89757e-05 -1.54164e-05  5.52605e-09
 1.23337e-05  -1.5676e-05    0.0131643  -3.1039e-06   1.6899e-06 -0.000254996
 1.48642e-05 -1.89757e-05  -3.1039e-06  2.23917e-05  3.92075e-06  8.55452e-08
 1.20708e-05 -1.54164e-05   1.6899e-06  3.92075e-06  3.19512e-06  8.90431e-09
-4.90016e-09  5.52605e-09 -0.000254996  8.55452e-08  8.90431e-09  7.07359e-06

Hits:
    hit  0 lyr= 0 idx=2024 pos r=  3.125 z=   1.493   mc_hit=2024 mc_trk=  25
    hit  1 lyr= 1 idx=1522 pos r=  6.955 z=   4.051   mc_hit=5137 mc_trk=  25
    hit  2 lyr= 2 idx=1252 pos r= 10.709 z=   6.556   mc_hit=7342 mc_trk=  25
    hit  3 lyr= 3 idx=1137 pos r= 16.147 z=  10.186   mc_hit=9363 mc_trk=  25
    hit  4 lyr= 4 idx=2419 pos r= 24.020 z=  16.908   mc_hit=22407 mc_trk=  25
    hit  5 lyr= 5 idx=2383 pos r= 24.222 z=  17.026   mc_hit=22380 mc_trk= 127
    hit  6 lyr= 6 idx=2199 pos r= 32.645 z=  23.889   mc_hit=29317 mc_trk=  25
    hit  7 lyr= 7 idx=2171 pos r= 32.928 z=  23.623   mc_hit=29314 mc_trk=  25
    hit  8 lyr= 8 idx=2480 pos r= 43.518 z=  30.145   mc_hit=34024 mc_trk=  25
    hit  9        idx=-1
    hit 10 lyr=10 idx=2439 pos r= 62.768 z=  45.977   mc_hit=51500 mc_trk= 165
    hit 11        idx=-1
    hit 12        idx=-1
    hit 13        idx=-2


** 35 / 152 - no overlap taken, 11 hits, 3 missed, 2 wrong

- overlap - 6 / 8 = 0.75

SELECTED LABEL: with q=+1 pT=  7.807 eta= -1.712 nHits= 8  label= 152
State:
 x:  1.16113 y:  -2.51718 z:  -4.84597
 px: 0.128089 py: -1.14578 pz: 2.78454
valid: 1 errors:
 6.30837e-06  2.84778e-06  6.00936e-08 -2.74574e-06 -8.91463e-07 -1.15916e-10
 2.84778e-06  1.28557e-06  2.71423e-08  -1.2392e-06 -4.02229e-07 -5.17892e-11
 6.00936e-08  2.71423e-08  4.37385e-05 -3.38545e-08 -7.95595e-09  1.00915e-06
-2.74574e-06  -1.2392e-06 -3.38545e-08  2.09827e-06  4.31419e-07  3.84066e-11
-8.91463e-07 -4.02229e-07 -7.95595e-09  4.31419e-07  1.38085e-07  4.47492e-11
-1.15916e-10 -5.17892e-11  1.00915e-06  3.84066e-11  4.47492e-11  2.64956e-08

Hits:
    hit  0 lyr= 0 idx=2265 pos r=  2.772 z=  -4.844   mc_hit=2265 mc_trk= 152
    hit  1 lyr= 1 idx=1607 pos r=  6.954 z= -16.056   mc_hit=4543 mc_trk= 152
    hit  2 lyr=45 idx= 904 pos r= 12.342 z= -30.500   mc_hit=9056 mc_trk= 152
    hit  3 lyr=46 idx=1011 pos r= 15.159 z= -38.053   mc_hit=10133 mc_trk= 152
    hit  4        idx=-1
    hit  5        idx=-1
    hit  6        idx=-1
    hit  7 lyr=49 idx= 340 pos r= 28.531 z= -77.914   mc_hit=32963 mc_trk= 302
    hit  8 lyr=50 idx= 587 pos r= 36.980 z= -94.045   mc_hit=34872 mc_trk= 152
    hit  9 lyr=51 idx= 528 pos r= 36.532 z= -94.364   mc_hit=34866 mc_trk= 152
    hit 10 lyr=52 idx= 678 pos r= 36.991 z=-107.068   mc_hit=36511 mc_trk=  -1
    hit 11        idx=-2

- devel - 7 / 8 = 0.875

SELECTED LABEL: with q=+1 pT=  7.992 eta= -1.713 nHits= 8  label= 152
State:
 x:  15.6423 y:  -36.9713 z:  -105.1
 px: 0.125122 py: -1.20022 pz: 2.78494
valid: 1 errors:
 0.000101573 -0.000236846            0 -3.07878e-06   8.3982e-07 -6.06734e-06
-0.000236846  0.000600547            0   2.0632e-06  2.88191e-07  1.51351e-05
           0            0            0            0            0            0
-3.07878e-06   2.0632e-06            0  9.25286e-06 -9.08744e-07  7.71755e-08
  8.3982e-07  2.88191e-07            0 -9.08744e-07  2.89507e-07  -4.0167e-09
-6.06734e-06  1.51351e-05            0  7.71755e-08  -4.0167e-09  5.40882e-07

Hits:
    hit  0 lyr= 0 idx=2265 pos r=  2.772 z=  -4.844   mc_hit=2265 mc_trk= 152
    hit  1 lyr= 1 idx=1607 pos r=  6.954 z= -16.056   mc_hit=4543 mc_trk= 152
    hit  2 lyr=45 idx= 904 pos r= 12.342 z= -30.500   mc_hit=9056 mc_trk= 152
    hit  3 lyr=46 idx=1011 pos r= 15.159 z= -38.053   mc_hit=10133 mc_trk= 152
    hit  4        idx=-1
    hit  5        idx=-1
    hit  6 lyr=48 idx= 310 pos r= 28.865 z= -77.669   mc_hit=32970 mc_trk= 152
    hit  7        idx=-1
    hit  8 lyr=50 idx= 587 pos r= 36.980 z= -94.045   mc_hit=34872 mc_trk= 152
    hit  9 lyr=51 idx= 528 pos r= 36.532 z= -94.364   mc_hit=34866 mc_trk= 152
    hit 10 lyr=52 idx= 678 pos r= 36.991 z=-107.068   mc_hit=36511 mc_trk=  -1
    hit 11        idx=-2


** 41 / 102 - no overlap taken (2 in pixels), 9 hits, 1 missed, 2 wrong

- overlap - 6 / 8 = 0.75

SELECTED LABEL: with q=+1 pT=  3.424 eta= -0.996 nHits= 8  label= 102
State:
 x:  3.15683 y:  0.0758754 z:  -2.03951
 px: 0.292057 py: 0.00500921 pz: 2.43408
valid: 1 errors:
 5.73975e-11 -6.98701e-09 -1.05043e-10  3.97426e-09  5.80745e-10  4.29526e-12
-6.98701e-09  4.61058e-06  3.47534e-08 -2.82499e-06 -1.14208e-06  8.76106e-10
-1.05043e-10  3.47534e-08  2.12765e-05 -2.49922e-08 -7.41577e-09  2.12522e-06
 3.97426e-09 -2.82499e-06 -2.49922e-08  1.20486e-05  9.43929e-07 -2.48423e-09
 5.80745e-10 -1.14208e-06 -7.41577e-09  9.43929e-07  3.16583e-07 -3.99071e-10
 4.29526e-12  8.76106e-10  2.12522e-06 -2.48423e-09 -3.99071e-10  2.37296e-07

Hits:
    hit  0 lyr= 0 idx=  81 pos r=  3.158 z=  -2.043   mc_hit=  81 mc_trk= 102
    hit  1 lyr= 1 idx=1574 pos r=  6.615 z=  -6.082   mc_hit=3611 mc_trk= 102
    hit  2 lyr= 2 idx=  11 pos r= 11.063 z= -11.286   mc_hit=3667 mc_trk= 102
    hit  3 lyr= 3 idx=1084 pos r= 16.160 z= -17.242   mc_hit=6127 mc_trk= 102
    hit  4 lyr= 4 idx= 632 pos r= 23.531 z= -24.272   mc_hit=11530 mc_trk= 102
    hit  5 lyr= 5 idx= 609 pos r= 23.753 z= -24.521   mc_hit=11526 mc_trk= 102
    hit  6 lyr= 6 idx= 686 pos r= 31.950 z= -38.927   mc_hit=17575 mc_trk=4970
    hit  7        idx=-1
    hit  8 lyr= 8 idx= 552 pos r= 40.136 z= -45.618   mc_hit=21833 mc_trk=3483
    hit  9        idx=-1
    hit 10        idx=-1
    hit 11        idx=-2

- devel - 7 / 7 = 1

SELECTED LABEL: with q=+1 pT=  3.379 eta= -0.996 nHits= 7  label= 102
State:
 x:  60.6902 y:  -5.28633 z:  -69.7014
 px: 0.295989 py: -0.190958 pz: 2.434
valid: 1 errors:
 4.58688e-05  0.000380214 -0.000177625 -3.39723e-05  1.93166e-05  1.89347e-06
 0.000380214   0.00317663  -0.00158836 -0.000272844  0.000158122  1.68748e-05
-0.000177625  -0.00158836     0.013558  0.000116433  -6.7044e-05  -0.00017662
-3.39723e-05 -0.000272844  0.000116433  3.79655e-05 -1.55856e-05 -1.24412e-06
 1.93166e-05  0.000158122  -6.7044e-05 -1.55856e-05  8.32869e-06  7.18228e-07
 1.89347e-06  1.68748e-05  -0.00017662 -1.24412e-06  7.18228e-07  2.59929e-06

Hits:
    hit  0 lyr= 0 idx=  81 pos r=  3.158 z=  -2.043   mc_hit=  81 mc_trk= 102
    hit  1 lyr= 1 idx=1574 pos r=  6.615 z=  -6.082   mc_hit=3611 mc_trk= 102
    hit  2 lyr= 2 idx=  11 pos r= 11.063 z= -11.286   mc_hit=3667 mc_trk= 102
    hit  3 lyr= 3 idx=1084 pos r= 16.160 z= -17.242   mc_hit=6127 mc_trk= 102
    hit  4 lyr= 4 idx= 632 pos r= 23.531 z= -24.272   mc_hit=11530 mc_trk= 102
    hit  5 lyr= 5 idx= 609 pos r= 23.753 z= -24.521   mc_hit=11526 mc_trk= 102
    hit  6        idx=-1
    hit  7 lyr= 7 idx= 681 pos r= 32.157 z= -38.720   mc_hit=17564 mc_trk= 102
    hit  8        idx=-1
    hit  9        idx=-1
    hit 10        idx=-2


================================================================
Sim 2018 PU70 sample - hit, module infos
================================================================

Average number of seeds per event 828.942505
Average number of hits in layer   0 = 3073.32
Average number of hits in layer   1 = 2615.13
Average number of hits in layer   2 = 2277.22
Average number of hits in layer   3 = 1917.71
Average number of hits in layer   4 = 4214.65
Average number of hits in layer   5 = 4349.80
Average number of hits in layer   6 = 3720.44
Average number of hits in layer   7 = 3737.94
Average number of hits in layer   8 = 3085.48
Average number of hits in layer   9 = 2640.19
Average number of hits in layer  10 = 3470.67
Average number of hits in layer  11 = 3450.70
Average number of hits in layer  12 = 2955.59
Average number of hits in layer  13 = 3003.03
Average number of hits in layer  14 = 2380.01
Average number of hits in layer  15 = 1955.55
Average number of hits in layer  16 = 1700.98
Average number of hits in layer  17 = 1360.74
Average number of hits in layer  18 = 1198.10
Average number of hits in layer  19 = 1276.75
Average number of hits in layer  20 = 1361.93
Average number of hits in layer  21 = 1032.49
Average number of hits in layer  22 =  768.76
Average number of hits in layer  23 = 1130.75
Average number of hits in layer  24 =  748.53
Average number of hits in layer  25 = 1187.02
Average number of hits in layer  26 =  849.00
Average number of hits in layer  27 = 2272.04
Average number of hits in layer  28 = 1071.64
Average number of hits in layer  29 = 2412.70
Average number of hits in layer  30 = 1157.40
Average number of hits in layer  31 = 2486.16
Average number of hits in layer  32 = 1201.94
Average number of hits in layer  33 = 2076.90
Average number of hits in layer  34 =  750.31
Average number of hits in layer  35 = 2154.58
Average number of hits in layer  36 =  762.48
Average number of hits in layer  37 = 2209.81
Average number of hits in layer  38 =  775.21
Average number of hits in layer  39 = 1770.90
Average number of hits in layer  40 =  349.86
Average number of hits in layer  41 = 1854.49
Average number of hits in layer  42 =  389.69
Average number of hits in layer  43 = 1464.36
Average number of hits in layer  44 =  403.46
Average number of hits in layer  45 = 1235.84
Average number of hits in layer  46 = 1362.54
Average number of hits in layer  47 = 1412.89
Average number of hits in layer  48 = 1016.37
Average number of hits in layer  49 =  726.22
Average number of hits in layer  50 = 1029.12
Average number of hits in layer  51 =  623.23
Average number of hits in layer  52 = 1189.20
Average number of hits in layer  53 =  854.48
Average number of hits in layer  54 = 2289.76
Average number of hits in layer  55 = 1105.33
Average number of hits in layer  56 = 2312.55
Average number of hits in layer  57 = 1117.81
Average number of hits in layer  58 = 2497.48
Average number of hits in layer  59 = 1208.42
Average number of hits in layer  60 = 2105.25
Average number of hits in layer  61 =  755.48
Average number of hits in layer  62 = 2159.37
Average number of hits in layer  63 =  758.59
Average number of hits in layer  64 = 2195.77
Average number of hits in layer  65 =  745.96
Average number of hits in layer  66 = 1810.17
Average number of hits in layer  67 =  330.47
Average number of hits in layer  68 = 1909.99
Average number of hits in layer  69 =  388.32
Average number of hits in layer  70 = 1473.86
Average number of hits in layer  71 =  406.15
Out of 1239532103 hits, 196376076 failed the cut

================================================================
=== Max module id for 72 layers
================================================================
Layer 0 : 92
Layer 1 : 209
Layer 2 : 336
Layer 3 : 488
Layer 4 : 306
Layer 5 : 313
Layer 6 : 409
Layer 7 : 407
Layer 8 : 494
Layer 9 : 576
Layer10 : 498
Layer11 : 498
Layer12 : 567
Layer13 : 567
Layer14 : 624
Layer15 : 672
Layer16 : 779
Layer17 : 881
Layer18 : 108
Layer19 : 109
Layer20 : 110
Layer21 : 85
Layer22 : 48
Layer23 : 86
Layer24 : 44
Layer25 : 87
Layer26 : 48
Layer27 : 311
Layer28 : 82
Layer29 : 319
Layer30 : 88
Layer31 : 316
Layer32 : 88
Layer33 : 294
Layer34 : 63
Layer35 : 294
Layer36 : 63
Layer37 : 288
Layer38 : 61
Layer39 : 258
Layer40 : 37
Layer41 : 261
Layer42 : 40
Layer43 : 225
Layer44 : 40
Layer45 : 111
Layer46 : 110
Layer47 : 111
Layer48 : 84
Layer49 : 45
Layer50 : 81
Layer51 : 37
Layer52 : 88
Layer53 : 48
Layer54 : 319
Layer55 : 88
Layer56 : 312
Layer57 : 86
Layer58 : 318
Layer59 : 88
Layer60 : 296
Layer61 : 64
Layer62 : 295
Layer63 : 63
Layer64 : 291
Layer65 : 60
Layer66 : 261
Layer67 : 35
Layer68 : 267
Layer69 : 40
Layer70 : 227
Layer71 : 40


With GC's cluster info etc ... testing
--------------------------------------

./writeMemoryFile --input ~slava77/data-buffer/CMSSW_10_4_0_patch1-tkNtuple/pass-925bb57/initialStep/default/10muPt0p2to10HS/trackingNtuple.root --output ../../mu-hs.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &

./writeMemoryFile --input ~slava77/data-buffer/CMSSW_10_4_0_patch1-tkNtuple/pass-925bb57/initialStep/default/11024.0_TTbar_13/AVE_70_BX01_25ns/trackingNtuple.root --output ../../pu70-ccc-hs.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &

./writeMemoryFile --input ~slava77/data-buffer/CMSSW_10_4_0_patch1-tkNtuple/pass-925bb57/initialStep/default/11024.0_TTbar_13/AVE_50_BX01_25ns/trackingNtuple.root --output ../../pu50-ccc-hs.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &

Data-format change: Hit gets module id, cluster info, Track now uses std::vector<HitOnTrack>
--------------------------------------------------------------------------------------------

* phi1 setup / running notes

.  /cvmfs/cms.cern.ch/slc7_amd64_gcc630/lcg/root/6.12.07-gnimlf2/etc/profile.d/init.sh
.  /cvmfs/cms.cern.ch/slc7_amd64_gcc630/external/tbb/2018_U1-cms/etc/profile.d/init.sh
export TBB_PREFIX=$TBB_ROOT

./writeMemoryFile --input root://redirector//store/user/slava77/CMSSW_9_1_0_pre1-tkNtuple/run1000/2017/pass-c93773a/initialStep/10muPt0p5to10HS//trackingNtuple.root --output ../../mu-hs.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &

./writeMemoryFile --input root://redirector//store/user/slava77/CMSSW_9_1_0_pre1-tkNtuple/run1000/2017/pass-c93773a/initialStep/PU70/10224.0_TTbar_13+TTbar_13TeV_TuneCUETP8M1_2017PU_GenSimFullINPUT+DigiFullPU_2017PU+RecoFullPU_2017PU+HARVESTFullPU_2017PU/trackingNtuple.root --output ../../pu70-ccc.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &

./writeMemoryFile --input root://redirector//store/user/slava77/CMSSW_9_1_0_pre1-tkNtuple/run1000/2017/pass-c93773a/initialStep/PU70HS/10224.0_TTbar_13+TTbar_13TeV_TuneCUETP8M1_2017PU_GenSimFullINPUT+DigiFullPU_2017PU+RecoFullPU_2017PU+HARVESTFullPU_2017PU/trackingNtuple.root --output ../../pu70-ccc-hs.bin --clean-sim-tracks --apply-ccc --write-rec-tracks &


.  /cvmfs/cms.cern.ch/slc7_amd64_gcc630/external/gdb/7.12.1-omkpbe2/etc/profile.d/init.sh
.  /cvmfs/cms.cern.ch/slc7_amd64_gcc630/external/valgrind/3.13.0-omkpbe/etc/profile.d/init.sh

mkFit/mkFit --cmssw-n2seeds --input-file /data2/mu-hs.bin --build-std
mkFit/mkFit --cmssw-n2seeds --input-file /data2/pu70-ccc-hs.bin --build-std --quality-val --num-events 10


TrackBase, TrackCand, storage of cand hits into a tree structure
----------------------------------------------------------------

The shittiest part of the problem seems to be how one handles backward fit and
pickup of overlap hits. OK, and then getting rid of outliers.

It almost seems like TrackFinalCand class would be needed where one would be
able to add and remove hits relatively easily. Like having a list but this is horrible.

On the other hand, once outward processing is done for a seed, a single
candidate is selected and therefore we can in principle screw up the hit history.
- Will we ever consider more than one Cand from a single seed?
- Have we finally checked if abs diag errors could be used to stop a cand (or at least
  reduce its score)?
  - For shortish tracks, how suspect should one be of the final couple of hits?

? HitStore interface to Track -- could this make Track indepenent of how hits are actually stored?
Several implementations + with/without cache (like N_holes).

? Filling / retrieving data from Matriplexes. MkFinder CopyIn/Out interfaces
... are they overdone, ie, should the guy the fills them up store extra data
elsewhere instead of putting it into Matriplex members of MkFinder?

------------------------------------------------------------------------

- Keep Track as IO object.

- Move all you need to move to TrackBase (need to keep memory layout of Track
  intact so all members before State need to be moved, too).

------------------------------------------------------------------------

CE and STD give identical track results as devel.
For 5k PU70 evs, 64 thr, 16 EIF, avx_512 (on phi3, best run out of 3):
 - CE  15% faster build,  3% better wall time
 - STD 25% faster build, 10% better wall time


================================================================================

Using non-sorted hits from external hit-vector ...
----------------------------------------------

... and keeping hit ranks for access.

*** Summary:

- Not sorting hits does not hurt performance, very little change.

  TO DECIDE: Do we keep both options with ifdefs?

- Test performance without doing the explicit mm_prefetch.

  ifdefs were there (MkFinder) for best-hit, I added them for clone engine
  and for standard. Did not do it for FV yet.

  It seems there is no benefit from prefetchin at all, even when
  hits are not copied into sorted order!
  In fact, about 3% faster.
  [It made me think hits are alrady sorted ... well, they seem to be within
  a module ... but the direction is not necessarily the same.]

  TO DECIDE: Do we remove prefetching instructions or we just
  ifdef them out by default.

- Fix in quality_val where we search for the seed track which was wrong due
  to seed cleaning. Kevin, please review.

  Note that with ranks (and reverse ranks) we could do hit index remapping
  without building of translation maps.
  Kevin and I (tohether) can probably do it rather fast.


*** Funny crash:

SEGV in mm_prefetch when preloading a hit.

Seems to only happen with O3, nun-thr >= 4, prefetching on (obviously).

I'm tracing it down as it really shouldn't happen. Seems more like an icc bug.


*** "Physics performance" test

Compare quality-val output on first 5 events.
1. Expect no change.
2. Observe some improvement with new code for some events ... probably due to fix in
   getting the seed track.


*** Timing tests: clone engine, single thread, pu70-ccc, 500 events

time ./mkFit --cmssw-n2seeds --input-file ../../mictest/mkFit/pu70-ccc-hs.bin --build-ce --num-events 500

- "Manual" prefetching that we have hurts a little.
  Surprisingly, even when not storing sorted hits.

= devel

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.67924  FVMX = 0.00000
  Total event loop time 79.82160 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 6117 on lay 5
  real    1m19.853s  user    1m18.097s  sys     0m1.552s

= hit-sort - no hit copy

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.85903  FVMX = 0.00000
  Total event loop time 79.78304 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m19.819s  user    1m18.050s  sys     0m1.563s

= hit-sort - no hit copy - AVX_512

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 46.86359  FVMX = 0.00000
  Total event loop time 57.06883 simtracks 4943065 seedtracks 1040426 builtcands 3421071 maxhits 5998 on lay 5
  real    0m57.099s  user    0m55.389s  sys     0m1.560s


= hit-sort - no hit copy - no prefetch

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 67.40083  FVMX = 0.00000
  Total event loop time 77.28962 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m17.319s  user    1m15.600s  sys     0m1.521s

= hit-sort - no hit copy - no prefetch - AVX_512

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 44.65550  FVMX = 0.00000
  Total event loop time 54.89823 simtracks 4943065 seedtracks 1040426 builtcands 3421071 maxhits 5998 on lay 5
  real    0m54.925s  user    0m53.196s  sys     0m1.584s

= hit-sort - no hit copy - no prefetch - AVX2

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 53.88735  FVMX = 0.00000
  Total event loop time 63.83459 simtracks 4943065 seedtracks 1040426 builtcands 3421022 maxhits 5998 on lay 5
  real    1m3.861s  user    1m2.114s  sys     0m1.578s

= hit-sort - yes hit copy

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 69.97530  FVMX = 0.00000
  Total event loop time 80.25051 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m20.279s  user    1m18.494s  sys     0m1.579s

= hit-sort - yes hit copy - no prefetch

  Total Matriplex fit = 0.00000  --- Build  BHMX = 0.00000  STDMX = 0.00000  CEMX = 66.97209  FVMX = 0.00000
  Total event loop time 77.29263 simtracks 4943065 seedtracks 1040426 builtcands 3421025 maxhits 5998 on lay 5
  real    1m17.322s  user    1m15.508s  sys     0m1.615s


*** Timing tests: clone engine, 64 threads / 16 in flight, pu70-ccc, avx-512, 5000 events:

time ./mkFit --cmssw-n2seeds --input-file ../../mictest/mkFit/pu70-ccc-hs.bin --build-ce --num-events 5000 --num-thr 64 --num-thr-ev 16

= devel

  Total event loop time 17.07450 simtracks 49338285 seedtracks 10275105 builtcands 33905375 maxhits 6473 on lay 5
  real    0m17.211s  user    16m14.243s  sys     0m33.480s

= hit-sort - no hit copy - no prefetch

  Total event loop time 16.56905 simtracks 49338285 seedtracks 10275105 builtcands 33905375 maxhits 6347 on lay 5
  real    0m16.692s  user    15m51.343s  sys     0m31.998s



================================================================================

Barrel, maxHolesPerCand=3 losses
--------------------------------

./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_brl-1000-10.bin-5 --geom CMS-2017 --num-events 100 --quality-val --build-ce | grep "FOUND_LABEL" | sort -n -k 8 -k 2,2 > fce-nh-12.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_brl-1000-10.bin-5 --geom CMS-2017 --num-events 100 --quality-val --build-ce | grep "FOUND_LABEL" | sort -n -k 8 -k 2,2 > fce-nh-3.txt

diff -u fce-nh-12.txt fce-nh-3.txt

-FOUND_LABEL      5  pT_mc=     3.34 eta_mc=    -0.35 event= 16

  5 q=-1 pT=  3.341 eta= -0.351 nHits=13  label=   5
    hit  0 lyr= 0 idx=  9 pos r=  3.066 x=   2.025 y=   2.302 z=  -3.178   mc_hit=  9 mc_trk=  5
    hit  1 lyr= 1 idx=  3 pos r=  6.958 x=   4.594 y=   5.225 z=  -4.572   mc_hit= 17 mc_trk=  5
    hit  2 lyr= 2 idx=  3 pos r= 11.062 x=   7.262 y=   8.344 z=  -6.037   mc_hit= 27 mc_trk=  5
    hit  3 lyr= 3 idx=  3 pos r= 16.152 x=  10.505 y=  12.269 z=  -7.853   mc_hit= 39 mc_trk=  5
    hit  4 lyr= 5 idx=  1 pos r= 27.389 x=  17.725 y=  20.880 z= -15.811   mc_hit= 48 mc_trk=  5
    hit  5 lyr= 4 idx=  4 pos r= 27.533 x=  17.510 y=  21.248 z= -16.019   mc_hit= 51 mc_trk=  5
    hit  6 lyr= 8 idx=  4 pos r= 43.306 x=  26.640 y=  34.143 z= -15.240   mc_hit= 89 mc_trk=  5
    hit  7 lyr=11 idx=  0 pos r= 60.026 x=  35.240 y=  48.594 z= -27.604   mc_hit=104 mc_trk=  5
    hit  8 lyr=10 idx=  0 pos r= 59.616 x=  35.355 y=  48.001 z= -27.316   mc_hit=105 mc_trk=  5
    hit  9 lyr=14 idx=  0 pos r= 76.787 x=  43.689 y=  63.147 z= -27.316   mc_hit=158 mc_trk=  5
    hit 10 lyr=15 idx=  0 pos r= 88.083 x=  48.667 y=  73.418 z= -27.313   mc_hit=170 mc_trk=  5
    hit 11 lyr=16 idx=  0 pos r= 97.773 x=  52.614 y=  82.410 z= -45.066   mc_hit=182 mc_trk=  5
    hit 12 lyr=17 idx=  0 pos r=106.757 x=  56.015 y=  90.881 z= -45.977   mc_hit=196 mc_trk=  5

-FOUND_LABEL      5  pT_mc=     6.36 eta_mc=    -0.04 event= 17

  5 q=-1 pT=  6.355 eta= -0.041 nHits=14  label=   5
    hit  0 lyr= 0 idx=  0 pos r=  2.840 x=   2.474 y=   1.394 z=   2.697   mc_hit=  0 mc_trk=  5
    hit  1 lyr= 1 idx=  0 pos r=  6.586 x=   5.795 y=   3.128 z=   2.555   mc_hit= 19 mc_trk=  5
    hit  2 lyr= 2 idx=  0 pos r= 11.037 x=   9.726 y=   5.219 z=   2.368   mc_hit= 44 mc_trk=  5
    hit  3 lyr= 3 idx=  0 pos r= 15.833 x=  13.940 y=   7.507 z=   2.180   mc_hit= 70 mc_trk=  5
    hit  4 lyr= 4 idx=  0 pos r= 24.320 x=  21.351 y=  11.645 z=  -3.694   mc_hit= 90 mc_trk=  5
    hit  5 lyr= 9 idx=  3 pos r= 48.415 x=  42.035 y=  24.022 z=   3.351   mc_hit=150 mc_trk=  5
    hit  6 lyr=11 idx=  4 pos r= 63.176 x=  54.880 y=  31.295 z=   9.079   mc_hit=171 mc_trk=  5
    hit  7 lyr=10 idx=  4 pos r= 62.729 x=  54.062 y=  31.814 z=   9.230   mc_hit=172 mc_trk=  5
    hit  8 lyr=13 idx=  0 pos r= 67.975 x=  58.888 y=  33.953 z=  -8.970   mc_hit=184 mc_trk=  5
    hit  9 lyr=13 idx=  4 pos r= 66.846 x=  57.018 y=  34.890 z=   9.313   mc_hit=193 mc_trk=  5
    hit 10 lyr=12 idx=  5 pos r= 67.295 x=  57.862 y=  34.361 z=   9.232   mc_hit=194 mc_trk=  5
    hit 11 lyr=15 idx=  0 pos r= 88.727 x=  75.412 y=  46.750 z=  -9.231   mc_hit=217 mc_trk=  5
    hit 12 lyr=16 idx=  0 pos r= 94.623 x=  80.155 y=  50.286 z=  -9.231   mc_hit=225 mc_trk=  5
    hit 13 lyr=17 idx=  0 pos r=106.803 x=  89.843 y=  57.750 z=  -9.230   mc_hit=236 mc_trk=  5


================================================================================

Tracing down silly values in track errors
-----------------------------------------

Working with standard finding

Added Track::hasSillyValues() to dump track covariance elements that are ans
or diagonal negative.

Call it from MkFinder::InputTracksAndHitIdcs()
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_ecp-1000-10.bin-5 --build-std --geom CMS-2017 --num-events 900 --quality-val > ecp-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/mu_ecn-1000-10.bin-5 --build-std --geom CMS-2017 --num-events 900 --quality-val > ecn-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/ttbar.bin --build-std --geom CMS-2017 --num-events 10 --quality-val > ttbar-10-silly.txt
./mkFit --cmssw-n2seeds --input-file /bar/mic/ttbar_pu.bin --build-std --geom CMS-2017 --num-events 10 --quality-val > ttbarpu-10-silly.txt

* 10 muon
  barrel, transition - clear
  endcaps have 5 - 10 tracks with negative diag elements of track covariance.
  Typically -epsilon

* ttbar, ttbar-pu
  have the above + frequent nans in on and off-diagnoal elements

It turns out the nans and negative diagonal elements mostly appear for seeds
that have a negative diagonal element to start with,

- Most of nans can be fixed by setting negative diagonal elements to 1 (for
  lack of a better value) ... but some persist.
- Practically all nans can be avoided by removing those seeds.
  Negative diagonal elements still remain, but there are really few,
  maybe a couple in ttbar_pu sample.
- I was trying to trace further how they comes about and ended with a huge headache.

Conclusion - nans during track findinf come from bad seeds.
I'll look at the backward fit once we resolve those.

Enabled FP exceptions in main(). The following things showed up:
- Determinant in 2x2 Cramer inversion can be 0.
  Using double just for determinant is good enough.
- Two issues in PropagationMPlex.cc - applyMaterialEffects()
  marked with XXX-KMD
  1. radL can become negative (sqrt), there is comment current code is for
     barrel only
  2. beta^2 can be one for large momentum - then we have sqrt(1 - beta2)
- MkFinder::SelectHitIndices() line 173:
    float dz = nSigmaZ * std::sqrt(Err[iI].ConstAt(itrack, 2, 2));
  When Cov(2,2) turns negative, we have a nan.


Backward fit
------------

./mkFit --cmssw-seeds --read --file-name /bar/mic/mu_ecp-1000-10.bin-5 --build-ce --geom CMS-2017 --num-events 1

chi2 seems too big!

With backwards fit: 14.64713

Test bad fit:
./mkFit --cmssw-seeds --read --file-name /bar/mic/mu_brl-1000-10.bin-5 --build-ce --geom CMS-2017 --num-events 990 --backward-fit-pca --kludge-cms-hit-errors | less



Better sensitive region checks, layer skipping, HoT in tree storage
-------------------------------------------------------------------

./mkFit --cmssw-seeds --clean-seeds --read --file-name /bar/mic/ttbar_pu.bin --build-ce --geom CMS-2017 --num-events 100 --best-out-of 3

Before: 15.667 (wtf??)

After adding checks in SelectHitIndices and storage of WSR_Result
13.97138

After removing (now duplicate) checks in FindCandidatesCloneEngine()
13.81581


Stash of HoTNode/Tree for commit of HitStructures.h. Goes after
EventOfHits << FNORD

struct HoTNode
{
  HitOnTrack m_hot;
  int        m_prev;
  // could have short m_prev, m_ref_count ... if ref-count is needed.

  HoTNode() {}

  HoTNode(HitOnTrack hot, int prev) : m_hot(hot), m_prev(prev) {}
};

struct HoTTree
{
  std::vector<HoTNode> m_nodes;

  HoTTree(int max_size)
  {
    m_nodes.reserve(max_size);
    // For CE it's something like:
    //   n_seed + max_cand * (max_layers - n_seed)
    //   4 + 8 * (32 - 3) = 236
    // Not sure for std. Not relevant for BestHit as it is now.
  }

  // Probably will be around for a long while ... growing as needed.

  // API for adding hits.
};

// Could have common base with Track.
// Track could subclass TrackState.

class Candidate
{
  TrackState m_state;
  int        m_last_hit_node;
  float      m_chi2;
  // int n_hits, n_holes, n_good_hits
};

class Seedling
{
  // vector or array of Candidates. hmmh, probably different size for CE vs. Std.
  // Not if we do selective output from std, not final sorting.
  HoTTree m_hot_tree;
  int     m_label;
  // is_complete
  // arrays for chi2 so we can do selection? then not needed in Canditate?
};


//==============================================================================
//==============================================================================

FNORD

--------------------------------------------------------------------------------


#########
Open issues with endcap
#########

* BestHit for cmssw

Truth seeds: Some events in endcap (more in ec- than ec+) have few mc matching
found tracks (even only 2). The tracks are found but mc matching fails.

Similar for cmssw seeds with reco seed only -- maybe even less tracks are found.

Some of this effect is seen in barrel, too.


* Basic quality

In the following functions (search for XXXXMT4K):
  TrackExtra::setMCTrackIDInfo, MkBuilder::quality_process
we assume there is a single hit per layer in MC track.
In cmssw case, there can be several ... and our algorithms find only one hit
per layer. So some tracks get rejected as not having enough matching hits.

----------------

Test samples on desire:

./mkFit --read --file-name /bar/mic/mu_brl-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds
./mkFit --read --file-name /bar/mic/mu_ecp-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds --num-events 995
./mkFit --read --file-name /bar/mic/mu_ecn-1000-10.bin-4 --build-ce --geom CMS-2017 --cmssw-seeds --num-events 995


#########
Notes for Kevin
#########

// Dump sim tracks + hits
  for (auto & t : m_event->simTracks_)
  {
    printf("%2d (%2d): ", t.label(), t.nFoundHits());

    for (int i = 0; i < t.nFoundHits(); ++i)
    {
      int idx = t.getHitIdx(i);
      int lyr = t.getHitLyr(i);

      printf("%4d", idx >= 0 ? m_event->layerHits_[lyr][idx].mcHitID() : -1);
    }
    printf("\n");
  }

// Dump cands + hits (would need to build map label to index to
// get it properly sorted)
  for (auto & t : m_event->candidateTracks_)
  {
    printf("%2d (%2d): ", t.label(), t.nFoundHits());

    for (int i = 0; i < t.nFoundHits(); ++i)
    {
      int idx = t.getHitIdx(i);
      int lyr = t.getHitLyr(i);

      printf("%4d", idx >= 0 ? m_event->layerHits_[lyr][idx].mcHitID() : -1);
    }
    printf("\n");
  }

In general, search for XXMT4K.

Thing that is probably most urgent is Validation + some issues with Simulation
and Seeding.

Remapping funcs after finding commented out in:
  MkBuilder::quality_output_BH()
  MkBuilder::quality_output_COMB()

What is needed for validation?


#########
Full detector tracking
#########

0. Open issues:
  a. Storing of hit indices into Track
     Also -- MkFitter and arrays of full hits.
     There is this mkfp->SetNhits() in every building layer loop.
  b. Last seed layer should somhow be known to building functions.

1. Best-hit on x-1-10000-brl.raw

BEFORE:
Building tracks with 'runBuildingTestPlexBestHit', total simtracks=10000
found tracks=9215  in pT 10%=9163  in pT 20%=9195     no_mc_assoc=785
  nH >= 80% =9111  in pT 10%=9106  in pT 20%=9111

AFTER:
Building tracks with 'runBuildingTestPlexBestHit', total simtracks=10000
found tracks=9215  in pT 10%=9165  in pT 20%=9194     no_mc_assoc=785
  nH >= 80% =9115  in pT 10%=9110  in pT 20%=9115

2. Std

BEFORE:
Building tracks with 'runBuildingTestPlexStandard', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

AFTER:
Building tracks with 'runBuildingTestPlexStandard', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

3. Clone engine:

BEFORE:
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971

AFTER:
Building tracks with 'runBuildingTestPlexCloneEngine', total simtracks=10000
found tracks=9977  in pT 10%=9969  in pT 20%=9974     no_mc_assoc=23
  nH >= 80% =9972  in pT 10%=9968  in pT 20%=9971


#########
Valgrind running notes
#########

# Valgrind memcheck on OSX, no leak checking
valgrind --log-file=vg.5 --error-limit=no --dsymutil=yes --leak-check=no --time-stamp=yes ./mkFit > o.5 2> e.5

# Valgrind with remote gdb
valgrind --vgdb=yes --vgdb-error=0 --error-limit=no --leak-check=no --track-origins=yes --time-stamp=yes ./mkFit
gdb ./mkFit
  target remote | vgdb


########
Thread pinning notes
########

Thread pinning on host

  7.07s -- CandCloner cloner(8, 20); // Same core
  6.13s -- CandCloner cloner(1, 2);  // Same socket, another core
  7.90s -- CandCloner cloner(1, 7);  // Another socket

Thread pinning on MIC (no real difference)

 38.00s -- CandCloner cloner(1,  2);  // Same core (any pair of 1,2,3,4)
 37.95s -- CandCloner cloner(1,  5);  // Another cpu
 36.75s -- CandCloner cloner(1, 25);  // Another cpu
 37.75s -- CandCloner cloner(1, 233); // Another cpu
